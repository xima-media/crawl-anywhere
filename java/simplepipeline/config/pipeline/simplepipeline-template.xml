<?xml version="1.0" encoding="utf-8"?>
<pipeline>
	<param name="witnessfilespath">log</param>
	<param name="logfilename">${logfilename}</param>
	<param name="oncemodetimeout">300</param>
	<connector classname="fr.eolya.simplepipeline.connector.FileQueueConnector">
		<param name="threads">2</param>
		<param name="rootdir">${rootdir}</param>
		<param name="filepattern">^j[.].*[.]xml$</param>
		<!--param name="onsuccessmoveto">${onsuccessmoveto}</param-->
		<param name="onerrormoveto">${onerrormoveto}</param>
	</connector>
	<stages>
 		<stage classname="fr.eolya.simplepipeline.stage.ContentTypeFilter">
 			<param name="onaction">add</param>
			<param name="contentTypeElement">item_contenttype</param>
			<param name="acceptedContentType">application/x-shockwave-flash,text/html,text/plain,application/pdf,application/xhtml+xml,application/msword,application/rtf,text/rtf,application/vnd.ms-excel,application/vnd.ms-powerpoint,application/vnd.openxmlformats-officedocument.wordprocessingml.document,application/vnd.openxmlformats-officedocument.presentationml.presentation,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</param>
 		</stage>
		<stage classname="fr.eolya.simplepipeline.stage.FieldMapping">
			<param name="onaction">add</param>
			<param name="source">item_contenttype</param>
			<param name="sourcecapture">^([a-zA-Z_\/\-\.\+]*).*</param>
 			<param name="groupcapture">1</param>
 			<param name="target">item_contenttyperoot</param>
			<param name="mappingdefinitionfile">${mappingdefinitionfile}</param>
			<param name="lowercasenormalization">no</param>
			<param name="sourcecaptureisdefault">yes</param>
		</stage>		
		<stage classname="fr.eolya.simplepipeline.stage.DocTextExtractor">
			<param name="onaction">add</param>
			<param name="scriptspath">${scriptspath}</param>
			<param name="url">item_url</param>
			<param name="contenttype">item_contenttype</param>
			<param name="contentcharset">item_charset</param>
			<param name="cleanmethod">item_clean_method</param>
			<param name="cleanmethoddefault"></param>
			<param name="source">content</param>
			<param name="target">text</param>
 			<param name="pdftotextpath">/usr/bin/pdftotext</param>
 			<param name="tmppath">tmp</param>
 			<param name="stoppipelineonerror">yes</param>
 			<param name="stoppipelineonemptytext">yes</param>
		</stage>
		<stage classname="fr.eolya.simplepipeline.stage.DocSummaryExtractor">
			<param name="onaction">add</param>
			<param name="source">text</param>
			<param name="target">summary</param>
			<param name="maxsize">400</param>
		</stage>	
		<stage classname="fr.eolya.simplepipeline.stage.TagFilter">
			<param name="tagfield">source_tags</param>
			<param name="textfield">text</param>
		</stage>
 		<stage classname="fr.eolya.simplepipeline.stage.LanguageDetector">
			<param name="onaction">add</param>
			<param name="url">item_url</param>
			<param name="text">text</param>
			<param name="target">item_language</param>
			<param name="targetdetection">item_languagedetection</param>
			<param name="sourcelanguage">source_language</param>
			<param name="declaredlanguage">item_declaredlanguage</param>
			<param name="candidatelanguages">source_candidatelanguages</param>
			<param name="declaredcharset">item_charset</param>
			<param name="textdetectionlength">4096</param>
			<param name="languagerecognizerpoolsize">5</param>
			<param name="ngp">${ngp}</param>
		</stage>
		<stage classname="fr.eolya.simplepipeline.stage.MetaExtractor">
 			<param name="onaction">add</param>
 			<param name="scriptspath">${scriptspath}</param>
 			<param name="url">item_url</param>
 			<param name="contenttype">item_contenttype</param>
 			<param name="contentcharset">item_charset</param>
 			<param name="lowercasenormalization">yes</param>
 			<param name="source_html">content</param>
 			<param name="source_text">text</param>
		</stage>
		<stage classname="fr.eolya.simplepipeline.stage.IndexerQueueWriter">
			<param name="queuedir">${queuedir}</param>
			<param name="maxqueuesize">10000</param>
			<param name="tempfilenameprefix">t.</param>
			<param name="filenameprefix">j.</param>
			<param name="solrmappings">${solrmappings}</param>
			<param name="solrboosts">${solrboosts}</param>
			<param name="solrboostkey">item_id</param>
		</stage>
	</stages>
</pipeline>